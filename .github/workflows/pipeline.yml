name: "Pipeline"

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  build:
    name: "Build"
    runs-on: "ubuntu-latest"

    defaults:
      run:
        shell: "pwsh"

    steps:
      - name: "Checkout Source"
        uses: "actions/checkout@v4"

      - name: "Setup Dotnet"
        uses: "actions/setup-dotnet@v4"
        with:
          cache: "true"
          cache-dependency-path: |
            Application/packages.lock.json
            CDK/packages.lock.json
          dotnet-quality: "ga"
          dotnet-version: "9.x"

      - name: "Test"
        run: "dotnet test"

      - name: "Publish Application"
        run: "dotnet publish Application.csproj --configuration Release --output '../dist/Application' --runtime linux-arm64 --self-contained true"
        working-directory: "Application"

      - name: "Publish CDK"
        run: "dotnet publish CDK.csproj --configuration Release --output '../dist/CDK' --runtime linux-x64 --self-contained true"
        working-directory: "CDK"

      - name: "Upload"
        uses: "actions/upload-artifact@v4"
        with:
          if-no-files-found: "error"
          name: "Distributable"
          path: "dist"
          retention-days: 2

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: "Deploy"
    needs: build
    runs-on: "ubuntu-latest"

    defaults:
      run:
        shell: "pwsh"
    
    permissions:
      id-token: write
      contents: read

    steps:
      - name: "Install CDK"
        run: "npm install -g aws-cdk"

      - name: "Download"
        uses: "actions/download-artifact@v4"
        with:
          name: "Distributable"
      
      - name: "Make CDK Executable"
        run: "chmod +x CDK"
        working-directory: "CDK"

      - name: "Login"
        uses: "aws-actions/configure-aws-credentials@v4"
        with:
          audience: "sts.amazonaws.com"
          aws-region: "${{ secrets.AWS_REGION }}"
          role-to-assume: "${{ secrets.AWS_ROLE_TO_ASSUME }}"

      - name: "Synthesize"
        run: "cdk synth --app='./CDK' -c ARTIFACT_PATH='../Application' -c AWS_LINUX_AMI_ID='${{ secrets.AWS_LINUX_AMI }}' -c DEV_IP='${{ secrets.DEV_IP }}' -c MAX_SPOT_PRICE='${{ secrets.MAX_SPOT_PRICE }}' -c VPC_CIDR='${{ secrets.VPC_CIDR }}'"
        working-directory: "CDK"

      - name: "Compare"
        run: "cdk diff --app='cdk.out'"
        working-directory: "CDK"

      - name: "Deploy"
        run: "cdk deploy --app='cdk.out' --progress events --require-approval never"
        working-directory: "CDK"
